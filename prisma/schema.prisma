// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Base {
  id        String   @id @default(cuid())
  name      String
  tables    Table[]  @relation("BaseTables")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())
}

model Table {
  id      String   @id @default(cuid())
  name    String
  baseId  String // foreign key
  base    Base     @relation("BaseTables", fields: [baseId], references: [id], onDelete: Cascade) // relation
  columns Column[] @relation("TableColumns")
  rows    Row[]    @relation("TableRows")
}

model Column {
  id      String @id @default(cuid())
  name    String
  type    String // e.g., 'text', 'number', 'checkbox'
  tableId String
  table   Table  @relation("TableColumns", fields: [tableId], references: [id], onDelete: Cascade)
  order   Int
  cells   Cell[] @relation("ColumnCells")
  visible   Boolean  @default(true)
}

model Row {
  id      String @id @default(cuid())
  tableId String
  table Table @relation("TableRows", fields: [tableId], references: [id], onDelete: Cascade)
  cells   Cell[] @relation("RowCells")
}

model Cell {
  id       String @id @default(cuid())
  rowId    String
  columnId String
  value    Json
  row    Row    @relation("RowCells", fields: [rowId], references: [id], onDelete: Cascade)
  column Column @relation("ColumnCells", fields: [columnId], references: [id], onDelete: Cascade)
}

model User {
  id        String   @id // This must match Clerk's user.id
  email     String
  name      String?
  createdAt DateTime @default(now())
}
